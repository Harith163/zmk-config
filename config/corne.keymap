/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q      &kp W        &kp E           &kp R           &kp T               &kp Y             &kp U           &kp I           &kp O        &kp P          &trans
&trans  &mt DEL A  &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_GUI F  &mt LEFT_SHIFT G    &mt LEFT_SHIFT H  &mt LEFT_GUI J  &mt LEFT_ALT K  &mt LCTRL L  &kp BACKSPACE  &trans
&trans  &kp Z      &kp X        &kp C           &kp V           &kp B               &kp N             &kp M           &kp COMMA       &kp DOT      &kp FSLH       &trans
                                &kp TAB         &mo 1           &kp SPACE           &kp RET           &mo 2           &kp ESCAPE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3    &kp N4    &kp N5       &kp N6   &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &none   &none   &none     &kp UP    &none        &none    &none   &none   &none   &none   &trans
&trans  &none   &none   &kp LEFT  &kp DOWN  &kp RIGHT    &none    &none   &none   &none   &none   &trans
                        &trans    &trans    &kp SPACE    &kp RET  &mo 3   &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&trans  &kp GRAVE  &kp MINUS  &kp EQUAL  &none     &none        &kp SEMI   &kp APOS  &kp BSLH         &kp LBKT  &kp RBKT  &trans
&trans  &kp TILDE  &kp UNDER  &kp PLUS   &none     &none        &kp COLON  &kp DQT   &kp PIPE         &kp LBRC  &kp RBRC  &trans
                              &trans     &mo 3     &kp SPACE    &kp RET    &trans    &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1         &kp F2         &kp F3         &kp F4         &kp F5           &kp F6      &kp F7         &kp F8                &kp F9      &kp F10  &trans
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &bt BT_CLR  &kp C_VOL_DN   &kp C_VOLUME_UP       &kp C_MUTE  &none    &none
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &none       &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC  &none       &none    &trans
                                      &trans         &trans         &kp SPACE        &kp ENTER   &trans         &trans
            >;
        };
    };
};
