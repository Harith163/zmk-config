/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5       &kp N6   &kp N7  &kp N8     &kp N9      &kp N0    &kp BSPC
&kp LCTRL  &trans  &trans  &trans    &kp UP    &trans       &trans   &trans  &trans     &trans      &trans    &kp DEL
&kp LSHFT  &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT    &trans   &trans  &kp COMMA  &kp PERIOD  &kp FSLH  &kp ESC
                           &kp LALT  &trans    &kp SPACE    &kp RET  &mo 3   &kp LGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp GRAVE  &kp MINUS  &kp EQUAL  &trans    &trans       &kp SEMI   &kp APOS  &kp BSLH         &kp LBKT  &kp RBKT  &kp DEL
&kp LSHFT  &kp TILDE  &kp UNDER  &kp PLUS   &trans    &trans       &kp COLON  &kp DQT   &kp PIPE         &kp LBRC  &kp RBRC  &kp ESC
                                 &kp LALT   &trans    &kp SPACE    &kp RET    &trans    &kp LGUI
            >;
        };

        layer_3 {
            bindings = <
&kp F12  &kp F1      &kp F2      &kp F3        &kp F4  &kp F5       &kp F6     &kp F7        &kp F8           &kp F9      &kp F10  &kp F11
&trans   &trans      &trans      &trans        &trans  &trans       &trans     &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_MUTE  &trans   &trans
&trans   &bt BT_PRV  &bt BT_NXT  &trans        &trans  &trans       &trans     &trans        &trans           &trans      &trans   &bt BT_CLR
                                 &kp LEFT_ALT  &trans  &kp SPACE    &kp ENTER  &trans        &kp LGUI
            >;
        };
    };
};
